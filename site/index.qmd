---
title: "Vade Bytes"
description: "A personal journey from content performance back to the pure joy of building and tinkering. This manifesto is about rediscovering curiosity, learning by doing, and building things for the love of it. Welcome to Vade Bytes."
keywords: "builders manifesto, curiosity driven learning, learning by building, joy of tinkering, building for curiosity, maker philosophy, lifelong learning, technical exploration"
author: "Pragyan"
page-layout: full
title-block-banner: false
---

<div class="prose prose-lg dark:prose-invert max-w-4xl mx-auto px-6 py-16 md:py-24">

<div class="mb-16 text-center">
<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-gray-900 dark:text-white">
A Builder's Manifesto
</h1>
</div>

<div class="text-lg md:text-xl leading-relaxed space-y-6 text-gray-800 dark:text-gray-200">

I was 19 when I built my first circuit at IIT Kanpur's electronics club. A simple 0 to 9 counter. Nothing impressive.

But getting it to work after an evening of troubleshooting? Watching those numbers finally count up? That hooked me completely.

I didn't build it because it was useful or because anyone asked me to. I built it because I couldn't stop thinking about why the display wasn't working right. Because figuring that out felt more alive than anything else I was doing.

That feeling, the pure joy of making something work just because you're curious, that's what I've been chasing for the last 10 years.

Every decision. Every pivot. Every "strategic move." All of it trying to get back to that feeling.

And somewhere along the way, I lost it completely.

---

## When Building Became Performance

Something shifted in tech. Maybe it happened to me too.

The game became about earning more. If you weren't increasing your salary constantly, you were somehow losing. It wasn't about curiosity anymore. It was raises, appraisal cycles, climbing the ladder.

When I was curious? I didn't have time. When I had time? I was exhausted.

I joined an early stage startup thinking I'd get back to building. Instead, I got the grind. It wasn't building for the sake of building. It was "we need to make money." "Launch this feature by Friday." "The system is down, get it back up."

Even when you wanted to take time to understand, to learn, the pressure drove you to just make the noise stop. Pick the fastest option. Get it done. Move on.

So I started my own company. Surely that would solve it, right?

Wrong.

Now it was constant pressure to make money. Talking to clients, convincing them to hire you for their next project just to keep the lights on. Performance for customers. Performance for hiring developers. Performance for survival.

And somewhere in there, technical writing shifted too. You used to share what you learned. Document your journey. It felt genuine because someone built something real and shared the unfiltered process.

Then something changed. Fake MRR screenshots. Engagement bait. People gaming algorithms instead of building real things.

I wanted to believe people were truthful. But except for a rare few, everyone was just selling the dream, not living it.

And I started performing too. Not because I wanted to, but because I thought I had to.

Don't know the latest framework? You're a loser. Nobody asks why. Nobody talks about tradeoffs. And if you dared to ask? You got booed off, taunted so hard you wouldn't ask again.

It became performance all the way through. And if you weren't performing, you weren't winning.

I tried playing this game for five years. And honestly? I sucked at it.

Same five years I was trying to bootstrap a company, by the way.

---

## Five Years of Building Everything at Once

Let me tell you what those five years actually looked like.

I hired interns in Bangalore with the hopes I could pull off my bootstrapping dreams and build Vade AI, a no-code platform. How hard could it be?

Turns out, really hard.

And doing it while building a house, bringing a newborn into the world, with a team with less real world experience and a depleting bank account?

This is the closest to impossible I've experienced.

You know that advice about focus? About doing one thing really well? Yeah, I wasn't following that advice. I was building roots and trying to grow wings at the same time.

The stress isn't just about the product. It's about carrying everyone's livelihood while your bank account shrinks. It's about debugging production issues after debugging why the baby won't sleep. It's about feeling responsible for your team's rent, your family's future, and your company's survival all at once.

That weight doesn't just slow you down. It crushes your ability to think clearly about what actually matters.

**Here's what I finally understood: you can't build something genuinely novel while in constant survival mode.**

So I made a choice. Keep the dream, change the path.

The moment I decided to find work felt like both relief and defeat. Relief because I could finally breathe. Defeat because I'd spent five years believing that "real founders" push through no matter what.

But here's what that choice actually gave me: mental space. Space to think clearly about what I actually want to build, instead of what would keep the lights on this month. Space to explore ideas that spark my curiosity without the panic of a shrinking runway. Space to be present for my family instead of constantly divided between guilt and urgency.

I found work that lets me contribute real value and pays well enough that I don't have to worry about money. Not because I gave up, but because I finally understood the difference between persistence and stubbornness.

This is the first strategic decision I've made in years that wasn't driven by desperation.

And something unexpected happened: I finally got back to what I loved about college. The freedom to tinker. To explore ideas just because they're interesting. To learn without the pressure of monetization. To build things because I'm curious, not because they have to work immediately.

**Vade Bytes is the documentation of that curiosity.**

But here's what really brought it home.

Last week, my 5-year-old asked me how his toy car works. Not just "it has batteries" - he wanted to know HOW. Why do the wheels turn when you push the button? What's happening inside?

I see that same curiosity in him that I felt with that first circuit. That need to understand, to explore, to build.

Part of Vade Bytes is me finding ways to share this world with him. To show him the realm of discovery I found in college, before life convinced me that curiosity needs a business model.

Some of my explorations will be projects we tackle together. Some will be me going deep into topics he won't care about for years. But all of it will be driven by that same feeling that hooked me at 19: the pure joy of figuring things out.

If I can pass that down to him - and maybe to you - then all those years of chasing weren't wasted. They taught me what matters.

---

## What You're Getting Here

My public lab notebook. Late-night experiments. Failed attempts. Unexpected discoveries. The feeling of building something from nothing, documented in real-time.

Some weeks it might be building Vade AI, a no-code platform. Other weeks it could be exploring LLMs, teaching my son about circuits, tinkering with technologies I don't understand yet, or diving deep into problems I find fascinating.

Whatever gets me obsessing late at night? That's what you'll read about.

This is what curiosity-driven learning actually looks like:

- That circuit that finally works at 2am (and the 47 attempts that didn't)
- Deep dives into topics I'm exploring right now
- Projects with my son as he discovers how things work
- Raw notes from building ambitious things
- Lessons from five years of doing everything wrong
- The messy, obsessive process everyone else edits out

No content calendar. No posting schedule. No "5 frameworks to..." Just the genuine excitement of discovery, the frustration of failure, and the documentation of what happens when you follow your curiosity without worrying about engagement.

Think of it like learning alongside someone who's genuinely excited about what they're discovering. Someone who still gets that feeling from a working circuit. I'm not teaching a curriculum. I'm sharing what I'm figuring out, as I figure it out.

If something I'm exploring sparks that same feeling in you - come along for the ride.

---

## Who This Is For

You, if you've ever stayed up late obsessing over a problem not because you had to, but because you couldn't stop thinking about it.

You, if you remember the feeling of building something from nothing and you've been chasing that feeling ever since.

You, if you miss learning for the joy of it.

You, if you want to watch someone explore ideas with the same curiosity as a 5-year-old asking "but how does it REALLY work?"

You, if you're curious about AI, technology, building things, or just want to explore ideas without a predetermined outcome.

You, if you'd rather learn by following someone's real experiments than reading polished tutorials that skip all the failures.

You, if you're building something ambitious while juggling responsibilities that actually matter more than any single project.

You, if you want to learn alongside someone who's figuring things out in real-time, not someone pretending they have all the answers.

Basically, Vade Bytes is for curious minds who want to explore, tinker, and build - not for people looking for quick wins or guru frameworks.

---

## Start Where You Are

You don't need permission to follow your curiosity. You don't need a perfect system or a content calendar or an audience.

You just need to start exploring what genuinely interests you.

If you've been holding back because you're not "expert enough" yet? Explore anyway. Learning in public means documenting the journey, not proving you've arrived.

If you've been stuck trying to sound like everyone else, stop. Your specific curiosity, your particular questions, your unique way of exploring: that's what makes learning engaging for others.

If you've been exhausted by the performance, you're not alone. There are more of us choosing curiosity over strategy than you think. We're just busy exploring instead of broadcasting.

The internet doesn't need another guru selling frameworks. It needs more people sharing what fascinates them, what they're tinkering with, what they're genuinely trying to understand.

So follow your curiosity. Build things because they're interesting. Explore ideas that spark your mind. Document what you discover, not because it fits a narrative, but because the act of documenting deepens your understanding.

The people who share your curiosity will find you. And when they do, they'll stick around to learn alongside you. Not because you have all the answers, but because you're asking interesting questions.

That's what I'm doing here. Come explore with me.

<div class="mt-12 pt-8 border-t border-neutral-200 dark:border-neutral-700">
  <a href="/posts.xml" class="inline-flex items-center gap-2 px-6 py-3 bg-[var(--color-rocketfuel-500)] hover:bg-[var(--color-rocketfuel-600)] text-white font-semibold rounded-lg transition-colors duration-200">
    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
      <path d="M5 3a1 1 0 000 2c5.523 0 10 4.477 10 10a1 1 0 102 0C17 8.373 11.627 3 5 3z"></path>
      <path d="M4 9a1 1 0 011-1 7 7 0 017 7 1 1 0 11-2 0 5 5 0 00-5-5 1 1 0 01-1-1zM3 15a2 2 0 114 0 2 2 0 01-4 0z"></path>
    </svg>
    Subscribe via RSS
  </a>
</div>

</div>

</div>
