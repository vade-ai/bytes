{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Introduction to Algorithms 🚀", :emoji nil, :path "#introduction-to-algorithms-🚀", :items [{:title "What is an Algorithm?", :emoji nil, :path "#what-is-an-algorithm?", :items []} {:title "Key Properties of Algorithms", :emoji nil, :path "#key-properties-of-algorithms", :items []} {:title "A Simple Example: Finding Maximum", :emoji nil, :path "#a-simple-example:-finding-maximum", :items []} {:title "Algorithm Complexity", :emoji nil, :path "#algorithm-complexity", :items []} {:title "Binary Search: A Classic Algorithm", :emoji nil, :path "#binary-search:-a-classic-algorithm", :items []} {:title "Recap", :emoji nil, :path "#recap", :items [{:title "Final Review Card", :emoji nil, :path "#final-review-card", :items []}]}]}], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns notebooks.articles.intro-to-algorithms), :file "notebooks/articles/intro_to_algorithms.clj", :scope notebooks.articles.intro-to-algorithms, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../"} "Index"] [:span.mx-2 "•"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/vade-ai/bytes/blob/2f55fa764c5449f10af1d896035c2618f4463fda/notebooks/articles/intro_to_algorithms.clj"} "notebooks/articles/intro_to_algorithms.clj" [:<> "@" [:span.tabular-nums "2f55fa7"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Introduction to Algorithms 🚀", :description "An algorithm is a finite sequence of well-defined instructions to solve a problem or perform a computation. Think of it as a recipe: given some inputs, follow the steps, and you'll get a predictable output."}, :title "Introduction to Algorithms 🚀", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "user/markdown-5dsTwyTaentvRryQtKDsnLS7caETg9"} ["h1" {:id "introduction-to-algorithms-🚀"} [:<> "Introduction to Algorithms 🚀"]]], :nextjournal/render-opts {:id "user/markdown-5dsTwyTaentvRryQtKDsnLS7caETg9"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5dr7qUtgqVPF2CMBParogwNVgdurWA"} ["h2" {:id "what-is-an-algorithm?"} [:<> "What is an Algorithm?"]] [:p [:<> "An "] [:strong [:<> "algorithm"]] [:<> " is a finite sequence of well-defined instructions to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "solve a problem or perform a computation. Think of it as a recipe:"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "given some inputs, follow the steps, and you'll get a predictable output."]] [:p [:<> "Algorithms are fundamental to computer science because they define"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:em [:<> "how"]] [:<> " we solve problems, not just "] [:em [:<> "what"]] [:<> " problem we're solving."]] [:p [:<> "Let's test your understanding of this basic definition:"]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5dr7qUtgqVPF2CMBParogwNVgdurWA"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-definition"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What is an algorithm?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0xaa60438 "bytes.viewers$show_card$fn__19063@aa60438"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "A finite sequence of well-defined instructions to solve a problem or perform a computation"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":basics", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "basics"] [:span.tag {:key ":definitions", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "definitions"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-definition"]], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsnADfGRy3dPQpcxiTkwSUD4CwXp7-result"}}, :nextjournal/blob-id "5dsKnyH2KDS6dCtjzRySQ7VS2bpV5x"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsnADfGRy3dPQpcxiTkwSUD4CwXp7-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5drDjZhH3VMXUpCzMCrYoMZatLKnAe"} ["h2" {:id "key-properties-of-algorithms"} [:<> "Key Properties of Algorithms"]] [:p [:<> "Good algorithms share several important properties:"]] [:ol [:li [:<> [:strong [:<> "Input"]] [:<> ": Zero or more inputs"]]] [:li [:<> [:strong [:<> "Output"]] [:<> ": At least one output"]]] [:li [:<> [:strong [:<> "Definiteness"]] [:<> ": Each step is clear and unambiguous"]]] [:li [:<> [:strong [:<> "Finiteness"]] [:<> ": Must terminate after a finite number of steps"]]] [:li [:<> [:strong [:<> "Effectiveness"]] [:<> ": Each operation must be basic enough to be done exactly"]]]] [:p [:<> "These properties distinguish algorithms from other kinds of procedures."]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5drDjZhH3VMXUpCzMCrYoMZatLKnAe"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-finiteness"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "Why must an algorithm be finite?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x6469a0be "bytes.viewers$show_card$fn__19063@6469a0be"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "It must terminate after a finite number of steps to produce a result"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":properties", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "properties"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-finiteness"]], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dr98XAXuTLQWFjp8qCcBHUPBAvCTB-result"}}, :nextjournal/blob-id "5ds2PrHcqVMN9XDNRvUwstpcFZzWAS"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dr98XAXuTLQWFjp8qCcBHUPBAvCTB-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5drhaQeCwc3RYjKepEvsQKuJfUHKfM"} ["h2" {:id "a-simple-example:-finding-maximum"} [:<> "A Simple Example: Finding Maximum"]] [:p [:<> "Let's look at a concrete algorithm. Here's how to find the maximum"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "value in a list of numbers:"]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5drhaQeCwc3RYjKepEvsQKuJfUHKfM"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn find-max [numbers]\n  (if (empty? numbers)\n    nil\n    (reduce (fn [current-max n]\n              (if (> n current-max)\n                n\n                current-max))\n            (first numbers)\n            (rest numbers))))", :nextjournal/render-opts {:loc {:line 50, :end-line 58, :column 1, :end-column 30}, :id "notebooks.articles.intro-to-algorithms/find-max-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[notebooks.articles.intro_to_algorithms$find_max 0x16d1f77d \"notebooks.articles.intro_to_algorithms$find_max@16d1f77d\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/find-max-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/find-max-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5ds8eGPspAWLsrRmEJj1FeMS5JE2gK"} [:p [:<> "Let's test it:"]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5ds8eGPspAWLsrRmEJj1FeMS5JE2gK"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(find-max [3 7 2 9 1 4])", :nextjournal/render-opts {:loc {:line 61, :end-line 61, :column 1, :end-column 25}, :id "notebooks.articles.intro-to-algorithms/anon-expr-5dsoToJK4sMAVkeA4LqJSoaXAyhvYZ-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value 9, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsoToJK4sMAVkeA4LqJSoaXAyhvYZ-result-1"}}, :nextjournal/blob-id "5du692cH2i2GmZtGrCgwihTz5r5vyA"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsoToJK4sMAVkeA4LqJSoaXAyhvYZ-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5dqykaRixAJLwvJNLhc8BqhQvvp2bT"} [:p [:<> "The algorithm works by:"]] [:ol [:li [:<> [:<> "Starting with the first number as our \"current max\""]]] [:li [:<> [:<> "Comparing each subsequent number to the current max"]]] [:li [:<> [:<> "Updating the current max if we find a larger number"]]] [:li [:<> [:<> "Returning the final max after checking all numbers"]]]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5dqykaRixAJLwvJNLhc8BqhQvvp2bT"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-max-strategy"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What strategy does the find-max algorithm use?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x853050d "bytes.viewers$show_card$fn__19063@853050d"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "Maintains a current maximum and updates it when finding a larger value"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":comparison", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "comparison"] [:span.tag {:key ":maximum", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "maximum"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-max-strategy"]], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dt9FSWUGPgUnYwc7nb1RfXWF5q846-result"}}, :nextjournal/blob-id "5duJ4EZnXNMrdTzb3pAStxPhU4d3W3"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dt9FSWUGPgUnYwc7nb1RfXWF5q846-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5drAhcEBPQ97nEQ722kVruXeYpqeco"} ["h2" {:id "algorithm-complexity"} [:<> "Algorithm Complexity"]] [:p [:<> "When analyzing algorithms, we care about two main resources:"]] [:ul [:li [:<> [:strong [:<> "Time complexity"]] [:<> ": How many steps does it take?"]]] [:li [:<> [:strong [:<> "Space complexity"]] [:<> ": How much memory does it use?"]]]] [:p [:<> "We express these using "] [:strong [:<> "Big O notation"]] [:<> ", which describes how"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "performance scales with input size."]] [:p [:<> "Common complexities (from best to worst):"]] [:ul [:li [:<> [:<> "O(1): Constant time"]]] [:li [:<> [:<> "O(log n): Logarithmic time"]]] [:li [:<> [:<> "O(n): Linear time"]]] [:li [:<> [:<> "O(n log n): Linearithmic time"]]] [:li [:<> [:<> "O(n²): Quadratic time"]]] [:li [:<> [:<> "O(2ⁿ): Exponential time"]]]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5drAhcEBPQ97nEQ722kVruXeYpqeco"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div.cards-collection ([#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 0], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-time-complexity"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What does time complexity measure?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x163d83db "bytes.viewers$show_card$fn__19063@163d83db"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "How many steps an algorithm takes as a function of input size"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":big-o", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "big-o"] [:span.tag {:key ":complexity", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "complexity"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-time-complexity"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 1], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-linear-time"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What does O(n) time complexity mean?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x2c80d2e0 "bytes.viewers$show_card$fn__19063@2c80d2e0"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "The algorithm's runtime grows linearly with the input size"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":big-o", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "big-o"] [:span.tag {:key ":complexity", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "complexity"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-linear-time"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 2], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-find-max-complexity"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What is the time complexity of find-max?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x545fb9e "bytes.viewers$show_card$fn__19063@545fb9e"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "O(n) - it must check every element once"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":complexity", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "complexity"] [:span.tag {:key ":maximum", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "maximum"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-find-max-complexity"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}])], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsYz6Z5hA46N9zPaGjz2MnM6coTuZ-result"}}, :nextjournal/blob-id "5dsHPUbUUjc4DDNvHD4tSXAm9125kx"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsYz6Z5hA46N9zPaGjz2MnM6coTuZ-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5drvDqArK65RuHujvJQMyeB1NNtfw4"} ["h2" {:id "binary-search:-a-classic-algorithm"} [:<> "Binary Search: A Classic Algorithm"]] [:p [:<> "Binary search is a efficient way to find an item in a "] [:em [:<> "sorted"]] [:<> " list."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Instead of checking every element (linear search), it repeatedly"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "divides the search space in half."]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5drvDqArK65RuHujvJQMyeB1NNtfw4"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn binary-search\n  \"Find the index of target in sorted vector v, or nil if not found\"\n  [v target]\n  (loop [low 0\n         high (dec (count v))]\n    (when (<= low high)\n      (let [mid (quot (+ low high) 2)\n            mid-val (get v mid)]\n        (cond\n          (= mid-val target) mid\n          (< mid-val target) (recur (inc mid) high)\n          :else (recur low (dec mid)))))))", :nextjournal/render-opts {:loc {:line 116, :end-line 127, :column 1, :end-column 43}, :id "notebooks.articles.intro-to-algorithms/binary-search-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[notebooks.articles.intro_to_algorithms$binary_search 0x3c945a20 \"notebooks.articles.intro_to_algorithms$binary_search@3c945a20\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/binary-search-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/binary-search-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5dt24pbSRuAQZuUn7W5YueD8vEAgWz"} [:p [:<> "Test it on a sorted vector:"]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5dt24pbSRuAQZuUn7W5YueD8vEAgWz"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(binary-search [1 3 5 7 9 11 13 15 17 19] 13)", :nextjournal/render-opts {:loc {:line 130, :end-line 130, :column 1, :end-column 46}, :id "notebooks.articles.intro-to-algorithms/anon-expr-5duGDcUNW7pTHJcYzSdPyh5EQi7xLU-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value 6, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5duGDcUNW7pTHJcYzSdPyh5EQi7xLU-result-1"}}, :nextjournal/blob-id "5dsm35swjAH7bd36Vs6537K8b42Dnr"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5duGDcUNW7pTHJcYzSdPyh5EQi7xLU-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5dtdMtA2YFmVQ16jcHMkeJYj8bowbU"} [:p [:<> "The key insight: by comparing with the middle element, we can"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "eliminate half the remaining elements in each step!"]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5dtdMtA2YFmVQ16jcHMkeJYj8bowbU"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div.cards-collection ([#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 0], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "binary-search-requirement"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What is the key requirement for binary search to work?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x152eed56 "bytes.viewers$show_card$fn__19063@152eed56"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "The input must be sorted"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":requirements", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "requirements"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"] [:span.tag {:key ":binary-search", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "binary-search"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: binary-search-requirement"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 1], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "binary-search-strategy"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "How does binary search eliminate elements?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x6f779773 "bytes.viewers$show_card$fn__19063@6f779773"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "By comparing with the middle element and discarding half the search space"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":strategy", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "strategy"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"] [:span.tag {:key ":binary-search", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "binary-search"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: binary-search-strategy"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 2], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "binary-search-complexity"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "What is the time complexity of binary search?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x45ca5faf "bytes.viewers$show_card$fn__19063@45ca5faf"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "O(log n) - it halves the search space each step"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":complexity", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "complexity"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"] [:span.tag {:key ":binary-search", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "binary-search"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: binary-search-complexity"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}])], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dto88tKaYHnMTYVcYT4G82VVbf7fU-result"}}, :nextjournal/blob-id "5dtm8dJs8cTYoMhLoYv3S5ZciWd1cu"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dto88tKaYHnMTYVcYT4G82VVbf7fU-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "notebooks.articles.intro-to-algorithms/markdown-5dtAsQW9ssKhCet9ewTnb3xLxMFtA7"} ["h2" {:id "recap"} [:<> "Recap"]] [:p [:<> "We've covered:"]] [:ul [:li [:<> [:<> "What algorithms are and their key properties"]]] [:li [:<> [:<> "How to analyze algorithm complexity with Big O notation"]]] [:li [:<> [:<> "Two fundamental algorithms: finding maximum (O(n)) and binary search (O(log n))"]]]] [:p [:<> "Understanding these basics provides a foundation for learning more"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "sophisticated algorithms and data structures."]] ["h3" {:id "final-review-card"} [:<> "Final Review Card"]]], :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/markdown-5dtAsQW9ssKhCet9ewTnb3xLxMFtA7"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div.card-container {:class "my-4 p-4 border-2 border-blue-400 rounded-lg bg-blue-50", :data-card-id "algo-why-complexity-matters"} [:div.card-header {:class "flex items-center gap-2 mb-2"} [:span.card-icon {:class "text-blue-600"} "🎯"] [:span.card-label {:class "text-sm font-semibold text-blue-600 uppercase"} "Review Card"]] [:div.card-question {:class "text-lg font-medium mb-3 text-gray-800"} "Why does algorithm complexity matter in practice?"] [:div.card-answer-section [:button.show-answer-btn {:class "px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition", :on-click #object[bytes.viewers$show_card$fn__19063 0x6f79d583 "bytes.viewers$show_card$fn__19063@6f79d583"]} "Show Answer"] [:div.card-answer {:class "p-3 bg-white rounded border border-gray-200", :style {:display "none"}} [:div {:class "text-sm text-gray-500 mb-1"} "Answer:"] [:div {:class "text-gray-800"} "It determines how well the algorithm scales to large inputs and affects real-world performance"]]] [:div.card-tags {:class "flex gap-2 mt-3 flex-wrap"} ([:span.tag {:key ":complexity", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "complexity"] [:span.tag {:key ":algorithms", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "algorithms"] [:span.tag {:key ":practical", :class "text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded"} "practical"])] [:div.card-debug {:class "text-xs text-gray-400 mt-2"} "Card ID: algo-why-complexity-matters"]], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsooXxYB3PSkkqjwdANjHuRXSTqnw-result"}}, :nextjournal/blob-id "5dtaLBb7HvEva9XJi9Rz4aHpUQnMUo"}, :nextjournal/render-opts {:id "notebooks.articles.intro-to-algorithms/anon-expr-5dsooXxYB3PSkkqjwdANjHuRXSTqnw-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}